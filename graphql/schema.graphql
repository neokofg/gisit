#import models/*.graphql
#import inputs/*.graphql

scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

type Query {
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(name: String @where(operator: "like")): [User!]! @paginate(defaultCount: 10)

    me: User @guard @auth

    authUser(input: AuthUser! @spread): String

    scientist(id: Int! @eq): Scientist @find

    scientists: [Scientist!]! @all

    getRegion(id: Int! @eq): JSONRegion
}

type Mutation {

    createUser(input:CreateUser! @spread): String

    createScientist(input:CreateScientist! @spread): Scientist @guard @auth

    approveScientist(id: Int! @eq, approve: Boolean!): String

    createMap(input: CreateMap! @spread): Map @guard @auth

    buyMap(input: BuyMap! @spread): String @guard @auth
}
